kommune_data <- read_excel("kommune_data_final.xlsx")
# Joining the final data with the kommune data
final_data <- final_data %>%
left_join(kommune_data, by = c("Mun_name" = "Municipality_Name"))
# Joining the final data with the kommune data
final_data <- final_data %>%
left_join(kommune_data, by = c("Mun_name" = "Municipality_Name"))
# Joining the final data with the kommune data
final_data <- final_data %>%
left_join(kommune_data, by = c("Municipality_Name" = "Mun_name"))
View(final_data)
### Merging demography with the final data ###
# Loading necessary libraries
library(tidyverse)
library(readxl)
library(writexl)
# Loading the final data
final_data <- read_excel("final_data.xlsx")
# Transforming to normal characters
final_data$Municipality_Name <- iconv(final_data$Municipality_Name, from = "UTF-8", to = "ASCII//TRANSLIT")
final_data$Municipality_Name <- trimws(final_data$Municipality_Name)
# Standardize store names to improve matching
final_data <- final_data %>%
mutate(Municipality_Name = str_trim(str_to_lower(Municipality_Name)))  # Trim spaces and convert to lowercase
# Standardize the kommune data
kommune_data <- kommune_data %>%
mutate(Mun_name = iconv(Mun_name, from = "UTF-8", to = "ASCII//TRANSLIT"),
Mun_name = str_trim(str_to_lower(Mun_name)))  # Trim spaces and convert to lowercase
# Loading the final data
final_data <- read_excel("final_data.xlsx")
# Transforming to normal characters
final_data$Municipality_Name <- iconv(final_data$Municipality_Name, from = "UTF-8", to = "ASCII//TRANSLIT")
final_data$Municipality_Name <- trimws(final_data$Municipality_Name)
# Standardize store names to improve matching
final_data <- final_data %>%
mutate(Municipality_Name = str_trim(str_to_lower(Municipality_Name)))  # Trim spaces and convert to lowercase
# Standardize store names to improve matching
final_data <- final_data %>%
mutate(Municipality_Name = str_trim(str_to_lower(Municipality_Name)))  # Trim spaces and convert to lowercase
# Standardize store names to improve matching
final_data <- final_data %>%
mutate(Municipality_Name = str_trim(str_to_lower(Municipality_Name)))  # Trim spaces and convert to lowercase
# Standardize the kommune data
kommune_data <- kommune_data %>%
mutate(Mun_name = iconv(Mun_name, from = "UTF-8", to = "ASCII//TRANSLIT"),
Mun_name = str_trim(str_to_lower(Mun_name)))  # Trim spaces and convert to lowercase
# Standardize the kommune data
kommune_data <- kommune_data %>%
mutate(Mun_name = iconv(Mun_name, from = "UTF-8", to = "ASCII//TRANSLIT"),
Mun_name = str_trim(str_to_lower(Mun_name)))  # Trim spaces and convert to lowercase
# Standardize store names to improve matching
final_data <- final_data %>%
mutate(Municipality_Name = str_trim(str_to_lower(Municipality_Name)))  # Trim spaces and convert to lowercase
# Loading the kommune data
kommune_data <- read_excel("kommune_data_final.xlsx")
# Standardize the kommune data
kommune_data <- kommune_data %>%
mutate(Mun_name = iconv(Mun_name, from = "UTF-8", to = "ASCII//TRANSLIT"),
Mun_name = str_trim(str_to_lower(Mun_name)))  # Trim spaces and convert to lowercase
# Joining the final data with the kommune data
final_data <- final_data %>%
left_join(kommune_data, by = c("Municipality_Name" = "Mun_name"))
View(final_data)
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>%  # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K")
# Merge the two datasets
kommune_data_final <- kommune_data %>%
left_join(demographic_data, by = c("Mun_num", "Mun_name"))
# Write data to Excel
write_xlsx(kommune_data_final, "Kommune_data_final.xlsx")
View(demographic_data)
View(kommune_data)
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>%  # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K")
# Merge the two datasets
kommune_data_final <- kommune_data %>%
left_join(demographic_data, by = c("Mun_num", "Mun_name"))
# Write data to Excel
write_xlsx(kommune_data_final, "Kommune_data_final.xlsx")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) #%>%
View(kommune_data)
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx") #%>%
View(kommune_data)
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx") %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>%  # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K")
# Merge the two datasets
kommune_data_final <- kommune_data %>%
left_join(demographic_data, by = c("Mun_num", "Mun_name"))
# Write data to Excel
write_xlsx(kommune_data_final, "Kommune_data_final.xlsx")
View(kommune_data_final)
View(kommune_data)
View(demographic_data)
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>%  # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K")
# Merge the two datasets
kommune_data_final <- kommune_data %>%
left_join(demographic_data, by = c("Mun_num", "Mun_name"))
# Write data to Excel
write_xlsx(kommune_data_final, "Kommune_data_final.xlsx")
View(kommune_data_final)
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\\$$[^\\$$]+\\)")
}
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
mutate(Mun_name = remove_parentheses(Mun_name)) %>%  # Remove text within parentheses
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>%  # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K") %>%
mutate(Mun_name = remove_parentheses(Mun_name))  # Remove text within parentheses
# Merge the two datasets
kommune_data_final <- kommune_data %>%
left_join(demographic_data, by = c("Mun_num", "Mun_name"))
# Write data to Excel
write_xlsx(kommune_data_final, "Kommune_data_final.xlsx")
View(kommune_data_final)
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Function to remove text within parentheses
remove_parentheses <- function(x) {
str_remove_all(x, "\\s*\$$[^\$$]+\\)")
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>% # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K")
# Merge the two datasets
kommune_data_final <- kommune_data %>%
left_join(demographic_data, by = c("Mun_num", "Mun_name"))
# Write data to Excel
write_xlsx(kommune_data_final, "Kommune_data_final.xlsx")
View(kommune_data_final)
# Return every N/A row
kommune_data_final[is.na(kommune_data_final)] <- 0
# Return every row with an N/A value
kommune_data_final %>%
filter(if_any(everything(), is.na))
library(fuzzyjoin)
install.packages("fuzzyjoin")
library(fuzzyjoin)
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(fuzzyjoin)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>% # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K")
# Merge the two datasets
#kommune_data_final <- kommune_data %>%
#  left_join(demographic_data, by = c("Mun_num", "Mun_name"))
# Perform a fuzzy join
kommune_data_final <- stringdist_join(
kommune_data, demographic_data,
by = c("Mun_num", "Mun_name"),
mode = "left",
method = "jw",  # Jaro-Winkler distance
max_dist = 0.1,  # Adjust this threshold as needed
distance_col = "dist"
)
# Write data to Excel
write_xlsx(kommune_data_final, "Kommune_data_final.xlsx")
View(kommune_data_final)
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>% # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K",
-"Mun_name")
# Merge the two datasets
kommune_data_final <- kommune_data %>%
left_join(demographic_data, by = c("Mun_num", "Mun_name"))
### Municipality area and population ###
# Importing libraries
library(tidyverse)
library(readxl)
library(writexl)
# Set locale to UTF-8
Sys.setlocale("LC_ALL", "en_US.UTF-8")
# Read data for total population and area of each municipality
kommune_data <- read_excel("Kommune_data.xlsx", skip = 3) %>%
rename("Municipality" = "...1",
"Population" = "2025...2",
"Area" = "2025...3") %>%
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
filter(Population != 0,
Area != 0) %>%
mutate(Population = as.numeric(Population),
Area = as.numeric(Area))
# Read data for demographic data
demographic_data <- read_excel("Kommune_demo.xlsx", skip = 4) %>%
rename("Municipality" = "...1",
"0-17" = "0-17 år",
"18+" = "18 år eller eldre") %>%
filter(if_all(everything(), ~ !is.na(.) & . != 0)) %>% # Remove rows with NA or 0 in any column
separate(Municipality, into = c("Mun_num", "Mun_name"), sep = " ", extra = "merge", fill = "right") %>%
separate(Mun_num, into = c("K", "Mun_num"), sep = "-") %>%
select(-"K",
-"Mun_name")
# Merge the two datasets
kommune_data_final <- kommune_data %>%
left_join(demographic_data, by = c("Mun_num"))
# Write data to Excel
write_xlsx(kommune_data_final, "Kommune_data_final.xlsx")
View(kommune_data_final)
### Merging demography with the final data ###
# Loading necessary libraries
library(tidyverse)
library(readxl)
library(writexl)
# Loading the final data
final_data <- read_excel("final_data.xlsx")
# Transforming to normal characters
final_data$Municipality_Name <- iconv(final_data$Municipality_Name, from = "UTF-8", to = "ASCII//TRANSLIT")
final_data$Municipality_Name <- trimws(final_data$Municipality_Name)
# Standardize store names to improve matching
final_data <- final_data %>%
mutate(Municipality_Name = str_trim(str_to_lower(Municipality_Name)))  # Trim spaces and convert to lowercase
# Loading the kommune data
kommune_data <- read_excel("kommune_data_final.xlsx")
# Standardize the kommune data
kommune_data <- kommune_data %>%
mutate(Mun_name = iconv(Mun_name, from = "UTF-8", to = "ASCII//TRANSLIT"),
Mun_name = str_trim(str_to_lower(Mun_name)))  # Trim spaces and convert to lowercase
# Joining the final data with the kommune data
final_data <- final_data %>%
left_join(kommune_data, by = c("Municipality_Name" = "Mun_name"))
View(final_data)
View(kommune_data)
View(final_data)
